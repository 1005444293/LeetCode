/**
 * 十-二进制数的最少数目:如果一个十进制数字不含任何前导零，且每一位上的数字不是 0 就是 1 ，
 * 那么该数字就是一个 十-二进制数 。例如，101 和 1100 都是 十-二进制数，而 112 和 3001 不是。
 * 给你一个表示十进制整数的字符串 n ，返回和为 n 的 十-二进制数 的最少数目。
 *
 * 输入：n = "32"
 * 输出：3
 * 解释：10 + 11 + 11 = 32
 * 思路：如果n中最大的字符max是9的话，那么如何从0和1中最少选几个相加等于9，所以最少情况是max个1
 *
 * 比如4613吧 最大数是6
 * 如答案：最多只要加6次，千位肯定有6个一的 其他位置可以置0或1只要满足1的个数等于当前位就可以
 * 例：0100+0111+1100+1101+11
 */
public class LC1689 {
    public int minPartitions(String n) {
        int max = 0;
        char[] c = n.toCharArray();
        for (char cc: c) {
            max = Math.max(cc-'0', max);
        }
        return max;
    }
}
